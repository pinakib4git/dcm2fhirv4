{
 "Resources": {
  "StepFunctionExecutionRoleC2E82F18": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "states.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Role for Step Function accessing S3, Health Imaging, and HealthLake",
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonS3FullAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AWSHealthImagingFullAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonHealthLakeFullAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AWSLambda_FullAccess"
       ]
      ]
     }
    ],
    "RoleName": "dev-689-StepFunctionRole"
   },
   "Metadata": {
    "aws:cdk:path": "DCM2FHIRStack-Final/StepFunctionsStack/StepFunctionExecutionRole/Resource"
   }
  },
  "MyHealthStateMachineF6F860D1": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"Comment\": \"A description of my state machine\", \"StartAt\": \"Manage Configuration\", \"States\": {\"Manage Configuration\": {\"Type\": \"Task\", \"Resource\": \"arn:aws:states:::lambda:invoke\", \"OutputPath\": \"$.Payload\", \"Parameters\": {\"Payload.$\": \"$\", \"FunctionName\": \"arn:aws:lambda:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":function:",
       {
        "Ref": "referencetoDCM2FHIRStackFinalLambdaIAMStackNestedStackLambdaIAMStackNestedStackResourceC393ED63OutputsDCM2FHIRStackFinalLambdaIAMStackMyLambdaFunctionToManageConfig295A5E4BRef"
       },
       ":$LATEST\"}, \"Retry\": [{\"ErrorEquals\": [\"Lambda.ServiceException\", \"Lambda.AWSLambdaException\", \"Lambda.SdkClientException\", \"Lambda.TooManyRequestsException\"], \"IntervalSeconds\": 1, \"MaxAttempts\": 3, \"BackoffRate\": 2, \"JitterStrategy\": \"FULL\"}], \"Next\": \"Parallel\"}, \"Parallel\": {\"Type\": \"Parallel\", \"Branches\": [{\"StartAt\": \"Transform WSI DICOM To FHIR V4\", \"States\": {\"Transform WSI DICOM To FHIR V4\": {\"Type\": \"Task\", \"Resource\": \"arn:aws:states:::lambda:invoke\", \"Parameters\": {\"Payload.$\": \"$\", \"FunctionName\": \"arn:aws:lambda:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":function:",
       {
        "Ref": "referencetoDCM2FHIRStackFinalLambdaIAMStackNestedStackLambdaIAMStackNestedStackResourceC393ED63OutputsDCM2FHIRStackFinalLambdaIAMStackMyLambdaFunctionToTransformD1FC5254Ref"
       },
       ":$LATEST\"}, \"Retry\": [{\"ErrorEquals\": [\"Lambda.ServiceException\", \"Lambda.AWSLambdaException\", \"Lambda.SdkClientException\", \"Lambda.TooManyRequestsException\"], \"IntervalSeconds\": 1, \"MaxAttempts\": 3, \"BackoffRate\": 2, \"JitterStrategy\": \"FULL\"}], \"Next\": \"convert FHIR JSON to NDJSON\", \"ResultPath\": \"$.myStateInput.OriginalEvent\"}, \"convert FHIR JSON to NDJSON\": {\"Type\": \"Task\", \"Resource\": \"arn:aws:states:::lambda:invoke\", \"Parameters\": {\"Payload.$\": \"$\", \"FunctionName\": \"arn:aws:lambda:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":function:",
       {
        "Ref": "referencetoDCM2FHIRStackFinalLambdaIAMStackNestedStackLambdaIAMStackNestedStackResourceC393ED63OutputsDCM2FHIRStackFinalLambdaIAMStackconvertFHIRtoNDJSONE233C7CARef"
       },
       ":$LATEST\"}, \"Retry\": [{\"ErrorEquals\": [\"Lambda.ServiceException\", \"Lambda.AWSLambdaException\", \"Lambda.SdkClientException\", \"Lambda.TooManyRequestsException\"], \"IntervalSeconds\": 1, \"MaxAttempts\": 3, \"BackoffRate\": 2, \"JitterStrategy\": \"FULL\"}], \"Next\": \"StartFHIRImportJobToHealthLake\", \"ResultPath\": \"$.myStateInput.OriginalEvent\"}, \"StartFHIRImportJobToHealthLake\": {\"Type\": \"Task\", \"Parameters\": {\"DataAccessRoleArn.$\": \"$.HealthLake_ImportExecutionRoleArn\", \"DatastoreId.$\": \"$.HL_DS_ID\", \"InputDataConfig\": {\"S3Uri.$\": \"$.S3_HealthLakeImportBucketName\"}, \"JobOutputDataConfig\": {\"S3Configuration\": {\"S3Uri.$\": \"$.S3_HealthLakeOutputBucketName\", \"KmsKeyId.$\": \"$.KMSKeyID_HealthLakeImportJob\"}}}, \"Resource\": \"arn:aws:states:::aws-sdk:healthlake:startFHIRImportJob\", \"End\": true}}}, {\"StartAt\": \"CreateDatastore\", \"States\": {\"CreateDatastore\": {\"Type\": \"Task\", \"Parameters\": {\"ClientToken.$\": \"$.ImageStoreID_ImportJob\", \"DatastoreName.$\": \"$.ImageStoreID_ImportJob\"}, \"Resource\": \"arn:aws:states:::aws-sdk:medicalimaging:createDatastore\", \"Next\": \"Wait\", \"ResultPath\": \"$.OutputOfCreateImageStore\"}, \"Wait\": {\"Type\": \"Wait\", \"Seconds\": 500, \"Next\": \"StartDICOMImportJob\"}, \"StartDICOMImportJob\": {\"Type\": \"Task\", \"Parameters\": {\"ClientToken.$\": \"$.OutputOfCreateImageStore.DatastoreId\", \"DataAccessRoleArn.$\": \"$.ImageStore_CreateImportRoleArn\", \"DatastoreId.$\": \"$.OutputOfCreateImageStore.DatastoreId\", \"InputS3Uri.$\": \"$.ImageImportJob_InputS3Bucket\", \"OutputS3Uri.$\": \"$.ImageImportJob_OutputS3Bucket\"}, \"Resource\": \"arn:aws:states:::aws-sdk:medicalimaging:startDICOMImportJob\", \"End\": true}}}], \"End\": true}}}"
      ]
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "StepFunctionExecutionRoleC2E82F18",
      "Arn"
     ]
    },
    "StateMachineName": "dev-689-ProcessDICOMFilesConvertFHIR",
    "StateMachineType": "STANDARD"
   },
   "DependsOn": [
    "StepFunctionExecutionRoleC2E82F18"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "DCM2FHIRStack-Final/StepFunctionsStack/MyHealthStateMachine/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/03Myw6CMBCF4WdhX0axblyKay+BByBjHaACLWGmIabh3Q24cfXlJCf/AbLTEfYJzpyaV5f29gnxRiz0KgVNp3DmKlocIBa+J3Wp3eqiWFfITMJwXlGsIQ+mI8mRSbHQWAdnxHrHEEtBoSua1rot8b+XRRXEPkyG1JYqBRvrmvV3DzIGWdTjI613Ow1ZBjp5s7XpFJzYgaD4+QVcMU/SyAAAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "DCM2FHIRStack-Final/StepFunctionsStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "StateMachineARN": {
   "Value": {
    "Ref": "MyHealthStateMachineF6F860D1"
   }
  },
  "StateMachineName": {
   "Value": {
    "Fn::GetAtt": [
     "MyHealthStateMachineF6F860D1",
     "Name"
    ]
   }
  },
  "StepFunctionRoleName": {
   "Value": {
    "Ref": "StepFunctionExecutionRoleC2E82F18"
   }
  },
  "StepFunctionRoleArn": {
   "Value": {
    "Fn::GetAtt": [
     "StepFunctionExecutionRoleC2E82F18",
     "Arn"
    ]
   }
  },
  "DCM2FHIRStackFinalStepFunctionsStackMyHealthStateMachine42AA2AE0Ref": {
   "Value": {
    "Ref": "MyHealthStateMachineF6F860D1"
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Parameters": {
  "referencetoDCM2FHIRStackFinalLambdaIAMStackNestedStackLambdaIAMStackNestedStackResourceC393ED63OutputsDCM2FHIRStackFinalLambdaIAMStackMyLambdaFunctionToManageConfig295A5E4BRef": {
   "Type": "String"
  },
  "referencetoDCM2FHIRStackFinalLambdaIAMStackNestedStackLambdaIAMStackNestedStackResourceC393ED63OutputsDCM2FHIRStackFinalLambdaIAMStackMyLambdaFunctionToTransformD1FC5254Ref": {
   "Type": "String"
  },
  "referencetoDCM2FHIRStackFinalLambdaIAMStackNestedStackLambdaIAMStackNestedStackResourceC393ED63OutputsDCM2FHIRStackFinalLambdaIAMStackconvertFHIRtoNDJSONE233C7CARef": {
   "Type": "String"
  }
 }
}